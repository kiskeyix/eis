#!/usr/bin/env ruby
# == Synopsis
#
# lshw-solaris: fake lshw for Solaris
#
# == Usage
#
# lshw-solaris [OPTION] ... > `hostname | cut -f1 -d.`-hardware.xml
#
# -h, --help:
#    show help
#
# --usage, -U, -?:
#    show usage
#

=begin
$Revision: 0.1 $
$Date: 2009-08-14 13:49 EDT $
Luis Mondesi <lemsx1@gmail.com>

DESCRIPTION:
USAGE: lshw-solaris --help
LICENSE: ___
=end


require 'getoptlong'
require 'rdoc/usage'

opts = GetoptLong.new(
[ '--help', '-h', GetoptLong::NO_ARGUMENT ],
[ '--usage', '-U', '-?', GetoptLong::NO_ARGUMENT ],
[ '--xml', '-x', '-m', '-l', GetoptLong::NO_ARGUMENT ]
)

opts.each do |opt, arg|
   case opt
   when '--help'
      RDoc::usage
   when '--usage'
      RDoc::usage
   end
end

def tag(tag,content,extra="")
    puts "<#{tag}#{extra}>#{content}</#{tag}>"
end

hostname = `hostname`.chomp

puts '<?xml version="1.0" standalone="yes" ?>'
puts '<!-- generated by lshw-solaris Ruby edition -->'
puts "<node id=\"#{hostname}\" claimed=\"true\" class=\"system\">"

# TODO
# use ndd/prntconf to fill these:
tag("description",`cat /etc/release|head -1`.chomp.strip)
tag("product",`uname -a`.chomp)
tag("vendor",`uname -s`.chomp)
tag("serial","")
tag("width",`isainfo -b`.chomp.split(/[[:blank:]]+/).first.sub(/[^[:digit:]]+/,""),' units="bits"')
#=~ /[^[:digit:]]/
# memory
puts "<node id=\"memory:0\" claimed=\"true\" class=\"memory\">"
tag("description","System Memory")
# TODO how many slots we have? do a loop:
slot = 0
puts "\t<node id=\"bank:#{slot}\" claimed=\"true\" class=\"memory\">"
print "\t\t" ; tag("description","DIMM")
print "\t\t" ; tag("product","")
print "\t\t" ; tag("vendor","")
print "\t\t" ; tag("serial","")
print "\t\t" ; tag("size",`prtconf|grep Memory`.chomp.split(/:/).last.sub(/egabytes/,"").strip,' units="bytes"')
print "\t\t" ; tag("width","",' units="bits"')
print "\t\t" ; tag("clock","",' units="Hz"')
puts "\t</node>" # end slot
puts "</node>" # end memory

# end
puts "</node>"
